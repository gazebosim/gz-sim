image: ubuntu:bionic

pipelines:
  default:
    - step:
        script:
          - apt-get update
          - apt -y install wget lsb-release gnupg
          - sh -c 'echo "deb http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -cs` main" > /etc/apt/sources.list.d/gazebo-stable.list'
          - sh -c 'echo "deb http://packages.osrfoundation.org/gazebo/ubuntu-prerelease `lsb_release -cs` main" > /etc/apt/sources.list.d/gazebo-prerelease.list'
          - wget http://packages.osrfoundation.org/gazebo.key -O - | apt-key add -
          - apt-get update
          - apt-get -y install
            cmake build-essential curl git mercurial cppcheck valgrind g++-8
            libgflags-dev doxygen ruby-ronn libtinyxml2-dev libtinyxml-dev
            software-properties-common libeigen3-dev
          - update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 800 --slave /usr/bin/g++ g++ /usr/bin/g++-8 --slave /usr/bin/gcov gcov /usr/bin/gcov-8
          - gcc -v
          - g++ -v
          - gcov -v
          # lcov
          - git clone https://github.com/linux-test-project/lcov.git
          - cd lcov
          - make install
          - cd ..
          # Dependency: Ignition packages
          - apt-get -y install
            libignition-cmake2-dev
            libignition-common3-dev
            libignition-gui-dev
            libignition-math6-eigen3-dev
            libignition-msgs3-dev
            libignition-plugin-dev
            libignition-physics-dev
            libignition-rendering-dev
            libignition-tools-dev
            libignition-transport6-dev
            libsdformat8-dev
          # SDFormat (uncomment if a specific branch is needed)
          # - apt install -y
          #   libxml2-utils
          # - hg clone http://bitbucket.org/osrf/sdformat -b gz11
          # - cd sdformat
          # - mkdir build
          # - cd build
          # - cmake .. -DBUILD_TESTING=false
          # - make -j4 install
          # - cd ../..
          # Ignition msgs (uncomment if a specific branch is needed)
          # - apt install -y
          #   libprotobuf-dev protobuf-compiler libprotoc-dev
          # - hg clone http://bitbucket.org/ignitionrobotics/ign-msgs -b gz11
          # - cd ign-msgs
          # - mkdir build
          # - cd build
          # - cmake .. -DBUILD_TESTING=false
          # - make -j4 install
          # - cd ../..
          # Ignition gui (uncomment if a specific branch is needed)
          # - apt install -y
          #   qtbase5-dev libtinyxml2-dev libprotoc-dev libprotobuf-dev
          #   qtdeclarative5-dev
          #   qtquickcontrols2-5-dev
          #   qml-module-qtquick2
          #   qml-module-qtquick-controls
          #   qml-module-qtquick-controls2
          #   qml-module-qtquick-dialogs
          #   qml-module-qtquick-layouts
          #   qml-module-qt-labs-folderlistmodel
          #   qml-module-qt-labs-settings
          # - hg clone http://bitbucket.org/ignitionrobotics/ign-gui -b gz11
          # - cd ign-gui
          # - mkdir build
          # - cd build
          # - cmake .. -DBUILD_TESTING=false
          # - make -j4 install
          # - cd ../..
          # Ignition Gazebo
          - mkdir build
          - cd build
          - cmake .. -DCMAKE_BUILD_TYPE=coverage
          - make -j4 install
          - make test ARGS="-VV"
          - make coverage
          # Use a special version of codecov for handling gcc8 output.
          - bash <(curl -s https://raw.githubusercontent.com/codecov/codecov-bash/4678d212cce2078bbaaf5027af0c0dafaad6a095/codecov) -X gcovout
          - make codecheck
          # - valgrind --tool=memcheck --memcheck:leak-check=full --memcheck:error-exitcode=1 ./bin/ign-gazebo -iterations 10
