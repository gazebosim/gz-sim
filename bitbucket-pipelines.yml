image: ubuntu:bionic

pipelines:
  default:
    - step:
        script:
          - apt-get update
          - apt-get -y install
            cmake build-essential curl git mercurial cppcheck valgrind g++-8
            libgflags-dev doxygen ruby-ronn libtinyxml2-dev libtinyxml-dev
            software-properties-common libeigen3-dev
          - update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 800 --slave /usr/bin/g++ g++ /usr/bin/g++-8 --slave /usr/bin/gcov gcov /usr/bin/gcov-8
          - gcc -v
          - g++ -v
          - gcov -v
          # Static checking before building
          - sh tools/code_check.sh
          # lcov
          - git clone https://github.com/linux-test-project/lcov.git
          - cd lcov
          - make install
          - cd ..
          # Ignition tools
          - apt install -y
            ruby-ronn ruby-dev
          - hg clone http://bitbucket.org/ignitionrobotics/ign-tools -b default
          - cd ign-tools
          - mkdir build
          - cd build
          - cmake ..
          - make -j4 install
          - cd ../..
          # Ignition cmake
          - hg clone http://bitbucket.org/ignitionrobotics/ign-cmake -b gz11
          - cd ign-cmake
          - mkdir build
          - cd build
          - cmake ..
          - make -j4 install
          - cd ../..
          # Ignition plugin
          - hg clone http://bitbucket.org/ignitionrobotics/ign-plugin -b default
          - cd ign-plugin
          - mkdir build
          - cd build
          - cmake ..
          - make -j4 install
          - cd ../..
          # Ignition math
          - hg clone http://bitbucket.org/ignitionrobotics/ign-math -b gz11
          - cd ign-math
          - mkdir build
          - cd build
          - cmake ..
          - make -j4 install
          - cd ../..
          # SDFormat
          - hg clone http://bitbucket.org/osrf/sdformat -b gz11
          - cd sdformat
          - mkdir build
          - cd build
          - cmake ..
          - make -j4 install
          - cd ../..
          # Ignition common
          - apt install -y
            uuid-dev
            libavcodec-dev libavdevice-dev libavformat-dev libavutil-dev
            libfreeimage-dev libgts-dev libswscale-dev
          - hg clone http://bitbucket.org/ignitionrobotics/ign-common -b gz11
          - cd ign-common
          - mkdir build
          - cd build
          - cmake ..
          - make -j4 install
          - cd ../..
          # Ignition msgs
          - apt install -y
            protobuf-compiler libprotoc-dev libprotobuf-dev
          - hg clone http://bitbucket.org/ignitionrobotics/ign-msgs -b gz11
          - cd ign-msgs
          - mkdir build
          - cd build
          - cmake ..
          - make -j4 install
          - cd ../..
          # Ignition transport
          - apt install -y
            libzmq3-dev
            libsqlite3-dev
          - hg clone http://bitbucket.org/ignitionrobotics/ign-transport -b gz11
          - cd ign-transport
          - mkdir build
          - cd build
          - cmake ..
          - make -j4 install
          - cd ../..
          # Ignition rendering
          - apt install -y
            libogre-1.9-dev
            libglew-dev libfreeimage-dev freeglut3-dev libxmu-dev libxi-dev
          - hg clone http://bitbucket.org/ignitionrobotics/ign-rendering -b gz11
          - cd ign-rendering
          - mkdir build
          - cd build
          - cmake ..
          - make -j4 install
          - cd ../..
          # Ignition gui
          - apt install -y
            qtbase5-dev libtinyxml2-dev
            qtdeclarative5-dev
            qtquickcontrols2-5-dev
            qml-module-qtquick2
            qml-module-qtquick-controls
            qml-module-qtquick-controls2
            qml-module-qtquick-dialogs
            qml-module-qtquick-layouts
            qml-module-qt-labs-folderlistmodel
            qml-module-qt-labs-settings
          - hg clone http://bitbucket.org/ignitionrobotics/ign-gui -b gz11
          - cd ign-gui
          - mkdir build
          - cd build
          - cmake ..
          - make -j4 install
          - cd ../..
          # Ignition physics
          ## DARTsim
          - apt-add-repository -y ppa:dartsim
          - apt-get update
          - apt-get -y install
            dart6-data
            libdart6-dev
            libdart6-utils-urdf-dev
          - hg clone http://bitbucket.org/ignitionrobotics/ign-physics -b PhysicsConstruction
          - cd ign-physics
          - mkdir build
          - cd build
          - cmake ..
          # may run out of memory if ran in parallel
          - make install
          - cd ../..
          # Ignition Gazebo
          - mkdir build
          - cd build
          - cmake .. -DCMAKE_BUILD_TYPE=coverage
          - make -j4
          - make test ARGS="-VV"
          - make coverage
          # Use a special version of codecov for handling gcc8 output.
          - bash <(curl -s https://raw.githubusercontent.com/codecov/codecov-bash/4678d212cce2078bbaaf5027af0c0dafaad6a095/codecov) -X gcovout
          - make codecheck
          - make install
          # - valgrind --tool=memcheck --memcheck:leak-check=full --memcheck:error-exitcode=1 ./bin/ign-gazebo -iterations 10
