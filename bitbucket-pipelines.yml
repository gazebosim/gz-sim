image: ubuntu:bionic

pipelines:
  default:
    - step:
        script:
          - apt-get update
          - apt -y install wget lsb-release gnupg sudo
          - docker/scripts/install_all.sh
          # Build some Ignition libraries from source.
          # Comment out these lines if using debians.
          # See also the docker/scripts/install_ign.sh script.
          - docker/scripts/build_ign.sh ignitionrobotics ign-rendering default
          - docker/scripts/build_ign.sh ignitionrobotics ign-sensors default
          # Ignition Gazebo
          - ./tools/clang_tidy.sh
          - mkdir build
          - cd build
          - cmake .. -DCMAKE_BUILD_TYPE=coverage
          - make -j4 install
          - make test ARGS="-VV"
          - make coverage
          # Use a special version of codecov for handling gcc8 output.
          - bash <(curl -s https://raw.githubusercontent.com/codecov/codecov-bash/$CODECOV_ID/codecov) -X gcovout -X gcov
          - make codecheck
  benchmark:
    - step:
        script:
          - apt-get update
          - apt -y install wget lsb-release gnupg sudo
          - docker/scripts/install_all.sh
          # Build some Ignition libraries from source.
          # Comment out these lines if using debians.
          # See also the docker/scripts/install_ign.sh script.
          - docker/scripts/build_ign.sh ignitionrobotics ign-rendering default
          - docker/scripts/build_ign.sh ignitionrobotics ign-sensors default
          # Ignition Gazebo
          - ./tools/clang_tidy.sh
          - mkdir build
          - cd build
          - cmake .. -DCMAKE_BUILD_TYPE=coverage
          - make -j4 install
          - ./bin/BENCHMARK_each -benchmark_out_format=json --benchmark_out=each.json
          - curl -k -X POST -d @each.json http://ignitionrobotics.org/1.0/benchmarks/gazebo --header 'authorization: Bearer $AUTH0_JWT_TOKEN'
