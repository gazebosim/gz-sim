/*
 * Copyright (C) 2019 Open Source Robotics Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
*/

syntax = "proto3";

package ignition.gazebo.msgs;

import "ignition/msgs/header.proto";

/// \brief Holds all the information needed to reconstruct a component.
message SerializedComponent
{
  /// \brief Component's type ID, as generated by the component factory.
  uint64 type = 1;

  /// \brief Component's serialized data in string format.
  string component = 2;
};

/// \brief Holds all the information needed to reconstruct an entity and its
/// components.
message SerializedEntity
{
  /// \brief The entity.
  uint64 id = 1;

  /// \brief All the components belonging to the entity.
  repeated SerializedComponent components = 2;
};

/// \brief Holds all the information needed to reconstruct the simulation state
/// at a given time.
message SerializedState
{
  /// \brief Header data, which contains the simulation time.
  ignition.msgs.Header header = 1;

  /// \brief All the entities currently in the simulation.
  repeated SerializedEntity entities = 2;
};
