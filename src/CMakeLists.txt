add_subdirectory(gui)
add_subdirectory(systems)

set(gui_sources
  ${gui_sources}
  PARENT_SCOPE
)

set (sources
  Conversions.cc
  EntityComponentManager.cc
  EventManager.cc
  Factory.cc
  Model.cc
  Server.cc
  ServerConfig.cc
  ServerPrivate.cc
  SimulationRunner.cc
  System.cc
  SystemLoader.cc
  Util.cc
  View.cc
)

set (gtest_sources
  ${gtest_sources}
  Conversions_TEST.cc
  EntityComponentManager_TEST.cc
  EventManager_TEST.cc
  Factory_TEST.cc
  ign_TEST.cc
  Model_TEST.cc
  Server_TEST.cc
  SimulationRunner_TEST.cc
  System_TEST.cc
  SystemLoader_TEST.cc
)

# Create the library target
ign_create_core_library(SOURCES ${sources} CXX_STANDARD 17)
target_link_libraries(${PROJECT_LIBRARY_TARGET_NAME}
  PUBLIC
  ignition-math${IGN_MATH_VER}
  ignition-plugin${IGN_PLUGIN_VER}::core
  ignition-common${IGN_COMMON_VER}::ignition-common${IGN_COMMON_VER}
  ignition-common${IGN_COMMON_VER}::profiler
  ignition-gui${IGN_GUI_VER}::ignition-gui${IGN_GUI_VER}
  ignition-transport${IGN_TRANSPORT_VER}::ignition-transport${IGN_TRANSPORT_VER}
  sdformat8::sdformat8
  PRIVATE
  ignition-plugin${IGN_PLUGIN_VER}::loader
)

ign_add_component(systems
  SOURCES ${systems_sources}
  GET_TARGET_NAME SYSTEMS_TARGET
  CXX_STANDARD 17)

target_link_libraries(${SYSTEMS_TARGET}
  PUBLIC
  ignition-common${IGN_COMMON_VER}::ignition-common${IGN_COMMON_VER}
  ignition-common${IGN_COMMON_VER}::profiler
  ${SDFormat_LIBRARIES}
  PRIVATE
  ignition-plugin${IGN_PLUGIN_VER}::register
)

set(IGNITION_GAZEBO_PLUGIN_INSTALL_DIR
  ${CMAKE_INSTALL_PREFIX}/${IGN_LIB_INSTALL_DIR}/ign-${IGN_DESIGNATION}-${PROJECT_VERSION_MAJOR}/plugins
)
install(TARGETS ${SYSTEMS_TARGET} DESTINATION ${IGNITION_GAZEBO_PLUGIN_INSTALL_DIR})

include_directories(${PROJECT_SOURCE_DIR}/test)

# Build the unit tests
ign_build_tests(TYPE UNIT
  SOURCES
    ${gtest_sources}
  LIB_DEPS
    ${PROJECT_LIBRARY_TARGET_NAME}
    ignition-gazebo
)

# Create the gazebo executable
ign_add_executable(ign-gazebo-exec main.cc)
set_property(TARGET ign-gazebo-exec PROPERTY OUTPUT_NAME ign-gazebo)
target_link_libraries(ign-gazebo-exec PUBLIC ${PROJECT_LIBRARY_TARGET_NAME}
  gflags
  ignition-common${IGN_COMMON_VER}::ignition-common${IGN_COMMON_VER}
)

# Create the server executable
ign_add_executable(ign-gazebo-server server_main.cc)
set_property(TARGET ign-gazebo-server PROPERTY OUTPUT_NAME ign-gazebo-server)
target_link_libraries(ign-gazebo-server PUBLIC ${PROJECT_LIBRARY_TARGET_NAME}
  gflags
  ignition-plugin${IGN_PLUGIN_VER}::ignition-plugin${IGN_PLUGIN_VER}
  ignition-common${IGN_COMMON_VER}::ignition-common${IGN_COMMON_VER}
  ignition-transport${IGN_TRANSPORT_VER}::ignition-transport${IGN_TRANSPORT_VER}
)

# Create the gui executable
ign_add_executable(ign-gazebo-gui gui_main.cc)
set_property(TARGET ign-gazebo-gui PROPERTY OUTPUT_NAME ign-gazebo-gui)
target_link_libraries(ign-gazebo-gui PUBLIC ${PROJECT_LIBRARY_TARGET_NAME}
  gflags
  ign-gazebo-gui-lib
  ignition-plugin${IGN_PLUGIN_VER}::ignition-plugin${IGN_PLUGIN_VER}
  ignition-common${IGN_COMMON_VER}::ignition-common${IGN_COMMON_VER}
  ignition-gui${IGN_GUI_VER}::ignition-gui${IGN_GUI_VER}
  ignition-transport${IGN_TRANSPORT_VER}::ignition-transport${IGN_TRANSPORT_VER}
  ${Qt5Core_LIBRARIES}
  ${Qt5Widgets_LIBRARIES}
)

# Switch to ign_install_executable when it is fixed (https://bitbucket.org/ignitionrobotics/ign-cmake/issues/29)
set_target_properties(ign-gazebo-exec
  PROPERTIES VERSION ${PROJECT_VERSION_FULL})
install (TARGETS ign-gazebo-exec DESTINATION ${IGN_BIN_INSTALL_DIR})

set_target_properties(ign-gazebo-server
  PROPERTIES VERSION ${PROJECT_VERSION_FULL})
install (TARGETS ign-gazebo-server DESTINATION ${IGN_BIN_INSTALL_DIR})

set_target_properties(ign-gazebo-gui
  PROPERTIES VERSION ${PROJECT_VERSION_FULL})
install (TARGETS ign-gazebo-gui DESTINATION ${IGN_BIN_INSTALL_DIR})
